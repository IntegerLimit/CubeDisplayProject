name: CI

on:
  push:

jobs:
  build:
    name: Build
    permissions:
      contents: write
    env:
      APP_NAME: CubeDisplayProject
    strategy:
      fail-fast: false
      matrix:
        target:
          # Windows
          - displayName: Windows (64 Bit),
            rustTarget: x86_64-pc-windows-gnu,
            runner: 'ubuntu-latest'

          # Linux
          - displayName: Linux (64 Bit),
            rustTarget: x86_64-unknown-linux-gnu,
            runner: 'ubuntu-latest'

          # macOS
          - displayName: MacOS (64 Bit / Intel),
            rustTarget: x86_64-apple-darwin,
            runner: 'macos-latest'

          - displayName: MacOS (Arm64 / Apple Silicon),
            rustTarget: aarch64-apple-darwin,
            runner: 'macos-latest'

    runs-on: ${{ matrix.target.runner }}
    steps:
      # Get the machine ready to build
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target.rustTarget }}

      - name: Update Sources
        if: ${{ contains(matrix.target.rustTarget, 'linux') }}
        run: sudo apt update

      - name: Add Windows Build Dependencies
        if: ${{ contains(matrix.target.rustTarget, 'pc-windows') }}
        run: sudo apt install -y gcc-mingw-w64

      # Build time
      - name: Build
        run: cargo build --release --target ${{ matrix.target.rustTarget }}

      - name: Upload Asset
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.displayName }}
          path: ./target/${{ matrix.target.rustTarget }}/release/${{ env.APP_NAME }}${{ endsWith(matrix.target.rustTarget, '-windows-gnu') && '.exe' || '' }}
