name: CI

on:
  push:

jobs:
  build:
    name: Build
    permissions:
      contents: write
    env:
      APP_NAME: CubeDisplayProject
    strategy:
      fail-fast: false
      matrix:
        target:
          # Windows
          - displayName: 'windows'
            rustTarget: 'x86_64-pc-windows-gnu'
            runner: 'ubuntu-latest'

          # Linux
          - displayName: 'linux'
            rustTarget: 'x86_64-unknown-linux-gnu'
            runner: 'ubuntu-latest'

          # macOS
          - displayName: 'macos-intel'
            rustTarget: 'x86_64-apple-darwin'
            runner: 'macos-latest'

          - displayName: 'macos-apple-silicon'
            rustTarget: 'aarch64-apple-darwin'
            runner: 'macos-latest'

    runs-on: ${{ matrix.target.runner }}
    steps:
      # Get the machine ready to build
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target.rustTarget }}

      - name: Update Sources
        if: ${{ contains(matrix.target.rustTarget, 'linux') }}
        run: sudo apt update

      - name: Add Windows Build Dependencies
        if: ${{ contains(matrix.target.rustTarget, 'pc-windows') }}
        run: sudo apt install -y gcc-mingw-w64

      # Build time
      - name: Build
        run: cargo build --release --target ${{ matrix.target.rustTarget }}

      - name: Upload Asset
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.target.displayName }}
          path: ./target/${{ matrix.target.rustTarget }}/release/${{ env.APP_NAME }}${{ endsWith(matrix.target.rustTarget, '-windows-gnu') && '.exe' || '' }}
